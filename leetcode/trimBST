class Solution:
    def trimBST(self, root: Optional[TreeNode], low: int, high: int) -> Optional[TreeNode]:
        if not root:
            return root
        if root.val == high:
            root.right = None
        if root.val ==low:
            root.left = None
        if root.val< low:
            root = self.trimBST(root.right, low, high)
        if high <root.val:
            root = self.trimBST(root.left, low, high)
        if root:
            root.left = self.trimBST(root.left, low, high)
            root.right = self.trimBST(root.right, low, high)
        
        return root
